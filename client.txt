server
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h> 
int main(){
  int sock = socket(AF_INET, SOCK_DGRAM, 0);
//   printf("%d\n",sock);
  if(sock==-1){
  printf("Socket failure\n");
  exit(0);
  }
  else printf("Socket created successfully.\n");
    //   char *roll = "20051846"; 
      char buffer[50];
  struct sockaddr_in server_add,client_add;
  server_add.sin_family = AF_INET;  
  server_add.sin_port = htons(1846);
  server_add.sin_addr.s_addr = INADDR_ANY;
  int status = bind(sock, (struct sockaddr*)&server_add, sizeof(server_add));
  if(status==0){
    printf("Binding Successful\n");
  }
  else if(status==-1){
    exit(0);
  }
  int len, n; 
  float ans = 0;
  float num1, num2 ;
  char o;
    len = sizeof(client_add);
    n = recvfrom(sock, (char *)buffer, 50 ,0, ( struct sockaddr *) &client_add, &len); 
    buffer[n] = '\0'; 
    printf("First Number : %s\n", buffer); 
    num1 = atof(buffer);
    n = recvfrom(sock, (char *)buffer, 50 ,0, ( struct sockaddr *) &client_add, &len); 
    buffer[n] = '\0'; 
    printf("Second Number : %s\n", buffer); 
    num2 = atof(buffer);
    n = recvfrom(sock, (char *)buffer, 50 ,0, ( struct sockaddr *) &client_add, &len); 
    buffer[n] = '\0'; 
    printf("Operator : %s\n", buffer); 
    o = buffer[0];
    if(o=='+')
        ans = num1 + num2 ;
    if(o=='-')
        ans = num1 - num2 ;
    if(o=='*')
        ans = num1 * num2 ;
    if(o=='/')
        ans = num1 / num2 ;
    char s[50];
    sprintf(s,"%f",ans);
    sendto(sock, (const char *)s, strlen(s),0, (const struct sockaddr *) &client_add,len); 
    printf("Answer sent succesfully\n");
  return 0;
}

client
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h> 
int main(){
  int sock = socket(AF_INET, SOCK_DGRAM, 0);
//   printf("%d\n",sock);
  if(sock==-1){
  printf("Socket failure\n");
  exit(0);}
  else printf("Socket created successfully.\n");
  char buffer[50];
  struct sockaddr_in server_add;
  server_add.sin_family = AF_INET;  
  server_add.sin_port = htons(1846);
  server_add.sin_addr.s_addr = INADDR_ANY;

int n, len;   
    printf("Enter the first number : ");
    char num[20];
    scanf("%s",num);
    sendto(sock, (const char *)num, strlen(num), 0, (const struct sockaddr *) &server_add,sizeof(server_add));
    printf("Enter the second number : ");
    scanf("%s",num);
    sendto(sock, (const char *)num, strlen(num), 0, (const struct sockaddr *) &server_add,sizeof(server_add));  
    printf("Enter the operator : ");
    scanf("%s",num);
    sendto(sock, (const char *)num, strlen(num), 0, (const struct sockaddr *) &server_add,sizeof(server_add));  
    printf("Numbers and operator successfully sent.\n");
    n = recvfrom(sock, (char *)buffer, 50 ,0, (struct sockaddr *) &server_add,&len); 
    buffer[n] = '\0'; 
    printf("Answer from Server : %s\n", buffer); 
    // close(sock); 
  return 0;
}